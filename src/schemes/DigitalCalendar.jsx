import React, { useState, useEffect } from 'react';
import axios from 'axios';
import Calendar from 'react-calendar';
import 'react-calendar/dist/Calendar.css';
import '../styles/DigitalCalendar.css'; // ‡§∏‡§æ‡§®‡•Å‡§ï‡•Ç‡§≤ CSS
const API_URL = process.env.REACT_APP_API_URL;

const DigitalCalendar = () => {
    const [events, setEvents] = useState([]);
    const [selectedDate, setSelectedDate] = useState(new Date());

    useEffect(() => {
        axios.get('http://localhost:5000/api/events')
            .then(res => setEvents(res.data))
            .catch(error => console.error("‡§ò‡§ü‡§®‡§æ‡§Ç‡§ö‡•Ä ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä ‡§Ü‡§£‡§§‡§æ‡§®‡§æ ‡§§‡•ç‡§∞‡•Å‡§ü‡•Ä:", error));
    }, []);

    // ‡§§‡§æ‡§∞‡•Ä‡§ñ ‡§Ø‡•ã‡§ó‡•ç‡§Ø ‡§∏‡•ç‡§µ‡§∞‡•Ç‡§™‡§æ‡§§ ‡§¨‡§¶‡§≤‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
    const formatDate = (date) => {
        return new Date(date).toLocaleDateString('mr-IN', {
            day: 'numeric', month: 'long', year: 'numeric'
        });
    };

    // ‡§§‡§æ‡§∞‡•Ä‡§ñ `YYYY-MM-DD` ‡§∏‡•ç‡§µ‡§∞‡•Ç‡§™‡§æ‡§§ ‡§Æ‡§ø‡§≥‡§µ‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
    const getFormattedDate = (date) => {
        return date.toISOString().split('T')[0];
    };

    // ‡§®‡§ø‡§µ‡§°‡§≤‡•á‡§≤‡•ç‡§Ø‡§æ ‡§§‡§æ‡§∞‡§ñ‡•á‡§∏‡§æ‡§†‡•Ä ‡§á‡§µ‡•ç‡§π‡•á‡§Ç‡§ü ‡§´‡§ø‡§≤‡•ç‡§ü‡§∞ ‡§ï‡§∞‡§æ
    const filteredEvents = events.filter(event => 
        getFormattedDate(new Date(event.date)) === getFormattedDate(selectedDate)
    );

    return (
        <div className="calendar-container">
            <h1>üìÖ ‡§ï‡•Ö‡§≤‡•á‡§Ç‡§°‡§∞</h1>

            {/* ‡§ï‡•Ö‡§≤‡•á‡§Ç‡§°‡§∞ ‡§ï‡•â‡§Æ‡•ç‡§™‡•ã‡§®‡§Ç‡§ü */}
            <div className="calendar-wrapper">
                <Calendar 
                    className="custom-calendar"
                    onChange={setSelectedDate}
                    value={selectedDate}
                />
            </div>

            {/* ‡§á‡§µ‡•ç‡§π‡•á‡§Ç‡§ü ‡§Ø‡§æ‡§¶‡•Ä */}
            <div className="event-list">
                <h3>üìå {formatDate(selectedDate)} ‡§∞‡•ã‡§ú‡•Ä‡§ö‡•á ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ</h3>
                {filteredEvents.length > 0 ? (
                    <ul>
                        {filteredEvents.map(event => (
                            <li key={event.id}>
                                <strong>{event.title}</strong> - {event.description}
                                <span className="event-date">({formatDate(event.date)})</span>
                            </li>
                        ))}
                    </ul>
                ) : (
                    <p>‡§Ø‡§æ ‡§¶‡§ø‡§µ‡§∂‡•Ä ‡§ï‡•ã‡§£‡§§‡•á‡§π‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§®‡§æ‡§π‡•Ä‡§§.</p>
                )}
            </div>
        </div>
    );
};

export default DigitalCalendar;
