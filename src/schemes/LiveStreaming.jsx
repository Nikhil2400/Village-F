import React, { useState, useEffect } from 'react';
import axios from 'axios';
import '../styles/LiveStreaming.css';
const API_URL = process.env.REACT_APP_API_URL;

const LiveStreaming = () => {
    const [streamData, setStreamData] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchStream = () => {
            axios.get('http://52.66.183.128:5000/api/get-streaming-option')
                .then(res => {
                    setStreamData(res.data);
                    setLoading(false);
                })
                .catch(err => {
                    console.error('‡§≤‡§æ‡§à‡§µ‡•ç‡§π ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Æ ‡§≤‡•ã‡§° ‡§ï‡§∞‡§§‡§æ‡§®‡§æ ‡§§‡•ç‡§∞‡•Å‡§ü‡•Ä:', err);
                    setError('‡§≤‡§æ‡§à‡§µ‡•ç‡§π ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Æ ‡§≤‡•ã‡§° ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§§ ‡§Ö‡§Ø‡§∂‡§∏‡•ç‡§µ‡•Ä.');
                    setLoading(false);
                });
        };

        fetchStream();
        const interval = setInterval(fetchStream, 5000); // ‡§¶‡§∞ 5 ‡§∏‡•á‡§ï‡§Ç‡§¶‡§æ‡§Ç‡§®‡•Ä ‡§°‡•á‡§ü‡§æ ‡§Ö‡§™‡§°‡•á‡§ü

        return () => clearInterval(interval); // ‡§Ö‡§®‡§Æ‡§æ‡§â‡§Ç‡§ü ‡§ù‡§æ‡§≤‡•ç‡§Ø‡§æ‡§µ‡§∞ ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§π‡§≤ ‡§ï‡•ç‡§≤‡§ø‡§Ö‡§∞ ‡§ï‡§∞‡§£‡•á
    }, []);

    if (loading) {
        return <h2>‡§≤‡§æ‡§à‡§µ‡•ç‡§π ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Æ ‡§≤‡•ã‡§° ‡§π‡•ã‡§§ ‡§Ü‡§π‡•á...</h2>;
    }

    if (error) {
        return <h2>{error}</h2>;
    }

    if (!streamData || !streamData.is_live || !streamData.stream_url) {
        return (
            <div className="no-stream-container">
                <div className="animated-text">‚è≥ ‡§∏‡§ß‡•ç‡§Ø‡§æ ‡§ï‡•ã‡§£‡§§‡§æ‡§π‡•Ä ‡§≤‡§æ‡§à‡§µ‡•ç‡§π ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Æ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§æ‡§π‡•Ä</div>
                <div className="blinking-text">üöÄ ‡§•‡•ã‡§°‡•ç‡§Ø‡§æ ‡§µ‡•á‡§≥‡§æ‡§§ ‡§™‡•Å‡§®‡•ç‡§π‡§æ ‡§™‡§π‡§æ!</div>
            </div>
        );
    }

    const { stream_url, option_name } = streamData;

    return (
        <div style={{ textAlign: 'center', padding: '20px' }}>
            <h2>üì° {option_name} ‡§∏‡§ß‡•ç‡§Ø‡§æ ‡§≤‡§æ‡§à‡§µ‡•ç‡§π ‡§Ü‡§π‡•á!</h2>
            {stream_url.includes('youtube.com') || stream_url.includes('youtu.be') ? (
                <iframe 
                    width="100%" 
                    height="500px" 
                    src={stream_url.replace('watch?v=', 'embed/') + '?autoplay=1&mute=1'} 
                    frameBorder="0" 
                    allow="autoplay; encrypted-media" 
                    allowFullScreen 
                    title="‡§≤‡§æ‡§à‡§µ‡•ç‡§π ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Æ">
                </iframe>
            ) : (
                <video 
                    controls 
                    autoPlay 
                    muted 
                    playsInline 
                    width="100%" 
                    height="500px">
                    <source src={stream_url} type="application/x-mpegURL" />
                </video>
            )}
        </div>
    );
};

export default LiveStreaming;
